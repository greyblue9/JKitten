<?xml version="1.0" encoding="UTF-8"?>

ACRONYM *
<think><set var="list"><star/></set>
<set var="acronym"/>
</think>
<condition var="list">
<li value="NIL"><uppercase><get var="acronym"/></uppercase></li>
<li><think><set var="word"><first><get var="list"/></first></set>
<set var="list"><rest><get var="list"/></rest></set>
<set var="acronym"><get var="acronym"/> <srai>FIRSTLETTER <explode><get var="word"/></explode></srai></set>
</think>
<loop/> </li>

</condition>

ANAGRAMWORDS *
<think><set var="list"><srai>ANAGRAM <star/></srai></set></think>
<condition var="list">
<li value="too long">I can only do anagrams up to 8 letters.</li>
<li><condition var="list">
    <li value="NIL"/>
    <li><think><set var="word"><first><get var="list"/></first></set>
        <set var="list"><rest><get var="list"/></rest></set>
        <set var="def"><sraix bot="drwallace/wndef" botid="f038d2f99e345a95" host="callmom.pandorabots.com">WNDEF <get var="word"/></sraix></set>
      </think> <condition var="def"><li value="unknown"/><li><get var="word"/> </li></condition> <loop/></li>
    </condition>
</li>
</condition>

JSTEST *
<javascript>
function foo() {
if (0 &lt; 1) return "true";
}
foo();
</javascript>

ANAGRAM *
<javascript>
function permutator (input) {
  var set =[];
  function permute (arr, data) {
    var cur, memo = data || [];

    for (var i = 0; i != arr.length; i++) {
       cur = arr.splice(i, 1)[0];
       if (arr.length === 0) {
         var result = memo.concat([cur]);
         list = list + result.join('')+' ';
         set.push(result);
       }
       permute(arr.slice(), memo.concat([cur]));
       arr.splice(i, 0, cur);
    }
    return list;
  }
  return permute(input);
}

function anagram(str) {
if (str.length &gt; 8) return ('too long');
list = '';
permutator(str.split(''));
return list;
}
anagram("<star/>");
</javascript>

SUBSTRING * * *
SUBSTRING <star/> <star index="2"/> <star index="3"/>?

SUBSTRING <set>number</set> <set>number</set> *
<srai>IMPLODE <srai>SUBSTRINGEXPLODE <star/> <star index="2"/> <explode><star index="3"/></explode></srai></srai>

SUBSTRINGEXPLODE <set>number</set> <set>number</set> *
<think>
<set var="count">0</set>
<set var="start"><star/></set>
<set var="end"><star index="2"/></set>
<set var="list"><star index="3"/></set>
<set var="print">false</set>
</think>
<condition var="list">
  <li value="NIL"/>
  <li><think><condition var="count"><value><get var="start"/></value><set var="print">true</set></condition>
<condition var="count"><value><get var="end"/></value><set var="print">false</set></condition>
</think><condition value="true" var="print"><first><get var="list"/></first></condition> <think><set var="list"><rest><get var="list"/></rest></set><set var="count"><map name="successor"><get var="count"/></map></set></think> <loop/></li>
</condition>

REMOVENILS * *
<star/> <srai>REMOVENILS <star index="2"/></srai>

REMOVENILS *
<star/>

REMOVENILS NIL *
<srai>REMOVENILS <star/></srai>

REMOVENILS NIL
<template/>

LASTLETTER *
The last letter of <star/> is: <srai>LASTITEM <explode><star/></explode></srai>

LASTITEM * *
<srai>LASTITEM <star index="2"/></srai>

LASTITEM *
<star/>

COUNTWORDS *
1

COUNTWORDS * *
<map name="successor"><srai>COUNTWORDS <star index="2"/></srai></map>

NORMALIZE *
<normalize><star/></normalize>

PLUSIFY *
<star/>

PLUSIFY * *
<star/>+<srai>PLUSIFY <star index="2"/></srai>

GOOGLEURL *
<![CDATA[<a href="https://www.google.com/search?q=]]><srai>PLUSIFY <star/></srai><![CDATA[">]]><star/>?<![CDATA[</a>]]>

JSTEST
<script type="text/javascript">

var a = document.createElement('a');
var linkText = document.createTextNode("my title text");
a.appendChild(linkText);
a.title = "my title text";
a.href = "http://example.com";
document.body.appendChild(a);

</script>

FIRSTTWOWORDS * * *
<star/> <star index="2"/>

FIRSTTWOWORDS * *
<star/> <star index="2"/>

FIRSTTWOWORDS *
<star/>

ODDEVEN <set>number</set>
<think><set var="number"><star/></set></think>
<condition var="number">
<li value="0"><star/> is even.</li>
<li value="1"><star/> is odd.</li>
<li><think><set var="number"><map><name>predecessor</name><get var="number"/></map></set><set var="number"><map><name>predecessor</name><get var="number"/></map></set></think><loop/></li>
</condition>

PICK A NUMBER # <set>number</set> # <set>number</set>
<think>
lower = <set var="lower"><srai>SMALLEROF <star index="2"/> <star index="4"/></srai></set>
upper = <set var="upper"><srai>LARGEROF <star index="2"/> <star index="4"/></srai></set>
<set var="lilist">
<condition var="lower">
  <li><value><get var="upper"/></value> <li><get var="upper"/></li></li>
  <li><li><get var="lower"/></li> <think><set var="lower"><map name="successor"><get var="lower"/></map></set></think> <loop/></li>
</condition>
</set>
</think>

<learn>
<category>
<pattern>PICKNUMBER</pattern>
<template><random><eval><get var="lilist"/></eval></random>
</template>
</category>
</learn>

<set name="pick"><srai>PICKNUMBER</srai></set>

WHAT NUMBER DID YOU *
<condition name="pick">
<li value="unknown">I haven't picked on yet.</li>
<li>I picked <get var="pick"/>.</li>
</condition>

SETHESHE *
<think>
<set var="gender"><srai>GENDERNAME <star/></srai></set>
<set name="pronoun">he</set>
<condition var="gender">
<li value="M"><set name="he"><star/></set></li>
<li value="F"><set name="she"><star/></set><set name="pronoun">she</set></li>
<li><set name="he"><star/></set></li>
</condition>
</think>

AGE FROM <set>month</set> <set>number</set> <set>number</set>
<think>
<set var="from"><set var="m"><star/></set> <set var="d"><star index="2"/></set>, <set var="y"><star index="3"/></set></set>
<set var="years">
<interval format="%B %d, %Y" jformat="MMMMMMMMM dd, yyyy">
<style>years</style>
<from><get var="from"/></from>
<to><date format="%B %d, %Y" jformat="MMMMMMMMM dd, yyyy"/></to>
</interval>
</set>
<set var="months">
<interval format="%B %d, %Y" jformat="MMMMMMMMM dd, yyyy">
<style>months</style>
<from><get var="from"/></from>
<to><date format="%B %d, %Y" jformat="MMMMMMMMM dd, yyyy"/></to>
</interval>
</set>
</think>
<condition var="years">
<li value="0"><get var="months"/> months old</li>
<li><get var="years"/> years old</li>
</condition>

LARGEROF 0 <set>number</set>
<star/>

LARGEROF <set>number</set> 0
<star/>

SMALLEROF 0 <set>number</set>
0

SMALLEROF <set>number</set> 0
0

LARGEROF <set>number</set> <set>number</set>
<map><name>successor</name><srai>LARGEROF <map><name>predecessor</name><star/></map> <map><name>predecessor</name><star index="2"/></map></srai></map>

SMALLEROF <set>number</set> <set>number</set>
<map><name>successor</name><srai>SMALLEROF <map><name>predecessor</name><star/></map> <map><name>predecessor</name><star index="2"/></map></srai></map>

ATOMICLISTMEMBER *
FALSE

ATOMICLISTMEMBER * *
<think><set name="isequalto"><srai>IS <star/> EQUALTO <star index="2"/></srai></set>
</think>
<condition name="isequalto">
<li value="true">true</li>
<li>false</li>
</condition>

ATOMICLISTMEMBER * * *
<think><set name="isequalto"><srai>IS <star/> EQUALTO <star index="2"/></srai></set>
</think>
<condition name="isequalto">
<li value="true">true</li>
<li><srai>ATOMICLISTMEMBER <star/> <star index="3"/></srai></li>
</condition>

COUNT TO <set>number</set>
<think><set name="count">0</set>
</think>
<condition name="count">
<li><value><star/></value></li>
<li><set name="count"><map><name>successor</name><get name="count"/></map></set> <loop/></li>
</condition>

COUNTLETTERS
0

COUNTLETTERS *
<think>
<set var="letters"><explode><star/></explode> end</set>
<set var="count">0</set>
</think>
<condition>
<li><var>letters</var><value>end</value> <get var="count"/></li>
<li><think>
<set var="letters"><srai>REMAININGWORDS <get var="letters"/></srai></set>
<set var="count"><map><name>successor</name><get var="count"/></map></set></think> <loop/></li>
</condition>

DELETE MY * LIST
Deleting your list.
<learn>
<category><pattern>MY <eval><star/></eval> LIST</pattern>
<template>NIL</template>
</category>
</learn>

DELETE MY LIST
Deleting your list.
<learn>
<category><pattern>MYLIST</pattern>
<template>NIL</template>
</category>
</learn>

FIRSTLETTER *
<star/>

FIRSTLETTER * *
<star/>

FORMATPHONENUMBER *
<star/>

FORMATPHONENUMBER * *
<think>
<set name="firstword"><lowercase><star/></lowercase></set>
</think>
<condition name="firstword">
<li value="dash">-<srai>FORMATPHONENUMBER <star index="2"/></srai></li>
<li value="plus">+<srai>FORMATPHONENUMBER <star index="2"/></srai></li>
<li value="lparen">(<srai>FORMATPHONENUMBER <star index="2"/></srai></li>
<li value="rparen">(<srai>FORMATPHONENUMBER <star index="2"/></srai></li>
<li><star/><srai>FORMATPHONENUMBER <star index="2"/></srai></li>
</condition>

GENERATE PASSWORD
<srai>IMPLODE <srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai><srai>RANDOMCHAR</srai></srai>

IMPLODE
<template/>

INPUT
<input index="1"/>

INPUT 2
<input index="2"/>

INPUT 3
<input index="3"/>

INPUT 4
<input index="4"/>

ISADIGIT *
FALSE

ISADIGIT 0
TRUE

ISADIGIT 1
TRUE

ISADIGIT 2
TRUE

ISADIGIT 3
TRUE

ISADIGIT 4
TRUE

ISADIGIT 5
TRUE

ISADIGIT 6
TRUE

ISADIGIT 7
TRUE

ISADIGIT 8
TRUE

ISADIGIT 9
TRUE

ISANAME * *
<srai>ISANAME <star/></srai>

ISANEMAILADDRESS *
FALSE

ISANEMAILADDRESS * AT * DOT *
TRUE

ISANEMAILADDRESS UNKNOWN
FALSE

ISANUMBER *
FALSE

ISANUMBER <set>number</set>
TRUE

ISAPHONENUMBER *
FALSE

ISAPHONENUMBER <set>number</set>
TRUE

ISAPHONENUMBER <set>number</set> *
<srai>ISAPHONENUMBER <star/></srai>

ISAPHONENUMBER DASH *
<srai>ISAPHONENUMBER <star/></srai>

ISAPHONENUMBER LPAREN *
<srai>ISAPHONENUMBER <star/></srai>

ISAPHONENUMBER PLUS *
<srai>ISAPHONENUMBER <star/></srai>

ISAPHONENUMBER RPAREN *
<srai>ISAPHONENUMBER <star/></srai>

ISSHORTANSWER *
TRUE

ISSHORTANSWER * *
TRUE

ISSHORTANSWER * * *
TRUE

ISSHORTANSWER * * * *
FALSE

LEARNEQUAL * EQUALTO *
<learn>
<category>
<pattern>TESTEQUAL <eval><star/></eval> EQUALTO <eval><star/></eval></pattern>
<template>true</template>
</category>
<category>
<pattern>TESTEQUAL <eval><star/></eval> EQUALTO *</pattern>
<template>false</template>
</category>
<category>
<pattern>TESTEQUAL * EQUALTO <eval><star/></eval></pattern>
<template>false</template>
</category>
</learn>

LOGICALAND FALSE
FALSE

LOGICALAND FALSE *
FALSE

LOGICALAND TRUE
TRUE

LOGICALAND TRUE *
<srai>LOGICALAND <star/></srai>

LOGICALOR FALSE
FALSE

LOGICALOR FALSE *
<srai>LOGICALOR <star/></srai>

LOGICALOR TRUE
TRUE

LOGICALOR TRUE *
TRUE

MY * LIST
Would you like to make a <star/> list?

NTH <set>number</set> *
<think>
<set var="nth"><star/></set>
<set var="count">1</set>
<set var="letters"><explode><star index="2"/></explode> end</set>
</think>
<condition>
<li><var>letters</var><value>end</value> <star index="2"/> has only <map><name>predecessor</name><get var="count"/></map> letters.</li>
<li><var>count</var><value><get var="nth"/></value> 
The <map><name>number2ordinal</name><get var="nth"/></map> letter of "<star index="2"/>" is <srai>FIRSTLETTER <get var="letters"/></srai></li>
<li><think>
<set var="letters"><srai>REMAININGWORDS <get var="letters"/></srai></set>
<set var="count"><map><name>successor</name><get var="count"/></map></set>
</think> <loop/></li>
</condition>

NTH 0 *
<star/> has no zeroth letter.

PREDECESSOR <set>number</set>
<map><name>predecessor</name><star/></map>

RANDOMCHAR
<think><set name="randomchar">
<random>
<li>0</li>
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
<li>6</li>
<li>7</li>
<li>8</li>
<li>9</li>
<li>A</li>
<li>B</li>
<li>C</li>
<li>D</li>
<li>E</li>
<li>F</li>
<li>G</li>
<li>H</li>
<li>I</li>
<li>J</li>
<li>K</li>
<li>L</li>
<li>M</li>
<li>N</li>
<li>O</li>
<li>P</li>
<li>Q</li>
<li>R</li>
<li>S</li>
<li>T</li>
<li>U</li>
<li>V</li>
<li>W</li>
<li>X</li>
<li>Y</li>
<li>Z</li>
</random>
</set>
</think>
<random><li><lowercase><get name="randomchar"/></lowercase></li>
<li><uppercase><get name="randomchar"/></uppercase></li>
</random>

RANDOMLETTER
<random>
<li>A</li>
<li>B</li>
<li>C</li>
<li>D</li>
<li>E</li>
<li>F</li>
<li>G</li>
<li>H</li>
<li>I</li>
<li>J</li>
<li>K</li>
<li>L</li>
<li>M</li>
<li>N</li>
<li>O</li>
<li>P</li>
<li>Q</li>
<li>R</li>
<li>S</li>
<li>T</li>
<li>U</li>
<li>V</li>
<li>W</li>
<li>X</li>
<li>Y</li>
<li>Z</li>
</random>

REMAININGWORDS
undefined

REMAININGWORDS *
undefined

REMAININGWORDS * *
<star index="2"/>

FIRSTWORD
undefined

FIRSTWORD *
<star/>

FIRSTWORD * *
<star/>

REQUEST 2
<request index="2"/>

REQUEST 3
<request index="3"/>

REQUEST 4
<request index="4"/>

RESPONSE
<response index="1"/>

RESPONSE 2
<response index="2"/>

RESPONSE 3
<response index="3"/>

RESPONSE 4
<response index="4"/>

SENTENCELENGTH
0

SENTENCELENGTH ALICE
5

SENTENCELENGTH *
1

SENTENCELENGTH * *
<map><name>successor</name><srai>SENTENCELENGTH <star index="2"/></srai></map>

SUCCESSOR <set>number</set>
<map><name>successor</name><star/></map>

THAT 1 1
<that index="1,1"/>

THAT 1 2
<that index="1,2"/>

THAT 1 3
<that index="1,3"/>

THAT 1 4
<that index="1,4"/>

THAT 2 1
<that index="2,1"/>

THAT 2 2
<that index="2,2"/>

THAT 2 3
<that index="2,3"/>

THAT 2 4
<that index="2,4"/>

XMLITEMIZE *
undefined

XMLITEMIZE CONS * CONS *
<item><star/></item><srai>XMLITEMIZE CONS <star index="2"/></srai>

XMLITEMIZE CONS * NIL
<item><star/></item>

XMLITEMIZE NIL
Your list is empty.

MATHTERM <set>number</set>
<star/>

MATHTERM <set>numbername</set>
<map><name>name2number</name><star/></map>

MATHTERM PI
3.14159265359

MATHTERM PLUS
+

MATHTERM STAR
*

MATHTERM TIMES
*

MATHTERM SLASH
/

MATHTERM POINT
.

MATHTERM MINUS
-

MATHTERM DASH
-

MATHTERM LPAREN
(

MATHTERM RPAREN
)

MATHTERM *
NOT A MATH TERM

MATHFORMULA _ SQUARED
<srai>MATHFORMULA <star/> UPARROW 2</srai>

MATHFORMULA _ UPARROW *
<think>
<set var="f1"><srai>MATHFORMULA <star/></srai></set>
<set var="f2"><srai>MATHFORMULA <star index="2"/></srai></set>
</think>
<condition var="f1">
<li value="NOT A MATH FORMULA">NOT A MATH FORMULA</li>
<li>
  <condition var="f2">
  <li value="NOT A MATH FORMULA">NOT A MATH FORMULA</li>
  <li>Math.pow(<get var="f1"/>,<get var="f2"/>)</li>
  </condition>
</li>
</condition>

MATHFORMULA *
<think>
<set var="list"><star/> END</set>
<set var="result"/>
</think>
<condition var="list">
<li value="END"><get var="result"/></li>
<li>
<think><set var="head"><srai>FIRSTWORD <get var="list"/></srai></set>
<set var="list"><srai>REMAININGWORDS <get var="list"/></srai></set>
<set var="term"><srai>MATHTERM <get var="head"/></srai></set>
<condition var="term">
<li value="NOT A MATH TERM">
<set var="list">END</set><set var="result">NOT A MATH FORMULA</set>
</li>
<li><set var="result"><get var="result"/><get var="term"/></set></li>
</condition></think><loop/></li>
</condition>


