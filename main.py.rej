--- main.py
+++ main.py
@@ -299,20 +305,27 @@ pos_tag("")
 
 class EvtHandler(FileSystemEventHandler):
   def on_any_event(self, evt):
-    # log.info("on_modified(self=%s, evt=%s)", self, evt)
-    name = getattr(evt, "name", getattr(evt, "dest_path", getattr(evt, "src_path", "")))
-    if not name:
-      return
-    stem = Path(name).name
-    stems = stem.rsplit(".", 2)
-    if len(stems) > 1:
-      stem = stems[-2]
-    print("stem=", stem)
-    dotted = f"commands.{stem}"
-    if not (Path("commands") / f"{stem}.py").exists():
-      return
-    log.info("on_modified: reloading %r", dotted)
-    bot.reload_extension(dotted)
+    # log.info("on_any_event(self=%s, evt=%s)", self, evt)
+    for fld, val in inspect.getmembers(evt):
+      if not isinstance(val, str):
+        continue
+      if ".py" not in val: continue
+      val2 = val.split("/")[-1]
+      val2 = val2.split(".py")[0]
+      val2 = val2.split(".")[-1]
+      p = Path("commands") / f"{val2}.py"
+      if not p.exists():
+        continue
+      name = ".".join([*p.parent.parts, p.stem])
+      log.debug("%s: %s := %r", type(evt).__name__, fld, val2)
+      try:
+        bot.unload_extension(name)
+      except Exception:
+        pass
+      if name in sys.modules:
+        del sys.modules[name]
+      bot.load_extension(name)
+      log.info("Reloaded extension: %s", name)
 
 
 def auto_reload_start(bot):
